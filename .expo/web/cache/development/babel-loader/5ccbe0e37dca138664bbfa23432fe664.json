{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _ColorPropType = _interopRequireDefault(require(\"react-native-web/dist/exports/ColorPropType\"));\n\nvar _ViewPropTypes = _interopRequireDefault(require(\"react-native-web/dist/exports/ViewPropTypes\"));\n\nvar _processColor = _interopRequireDefault(require(\"react-native-web/dist/exports/processColor\"));\n\nvar _NativeLinearGradient = _interopRequireDefault(require(\"./NativeLinearGradient\"));\n\nvar _jsxFileName = \"/home/damien/Projects/react-native/node_modules/expo-linear-gradient/build/LinearGradient.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar LinearGradient = function (_React$Component) {\n  (0, _inherits2.default)(LinearGradient, _React$Component);\n\n  function LinearGradient() {\n    (0, _classCallCheck2.default)(this, LinearGradient);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LinearGradient).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(LinearGradient, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          colors = _this$props.colors,\n          locations = _this$props.locations,\n          start = _this$props.start,\n          end = _this$props.end,\n          props = (0, _objectWithoutProperties2.default)(_this$props, [\"colors\", \"locations\", \"start\", \"end\"]);\n\n      if (locations && colors.length !== locations.length) {\n        console.warn('LinearGradient colors and locations props should be arrays of the same length');\n        locations = locations.slice(0, colors.length);\n      }\n\n      return _react.default.createElement(_NativeLinearGradient.default, (0, _extends2.default)({}, props, {\n        colors: colors.map(_processColor.default),\n        locations: locations,\n        startPoint: _normalizePoint(start),\n        endPoint: _normalizePoint(end),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        }\n      }));\n    }\n  }]);\n  return LinearGradient;\n}(_react.default.Component);\n\nexports.default = LinearGradient;\nLinearGradient.propTypes = _objectSpread({}, _ViewPropTypes.default, {\n  colors: _propTypes.default.arrayOf(_ColorPropType.default).isRequired,\n  locations: _propTypes.default.arrayOf(_propTypes.default.number),\n  start: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.number), _propTypes.default.object]),\n  end: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.number), _propTypes.default.object])\n});\n\nfunction _normalizePoint(point) {\n  if (!point) {\n    return undefined;\n  }\n\n  if (Array.isArray(point) && point.length !== 2) {\n    console.warn('start and end props for LinearGradient must be of the format [x,y] or {x, y}');\n    return undefined;\n  }\n\n  return Array.isArray(point) ? point : [point.x, point.y];\n}","map":{"version":3,"sources":["../src/LinearGradient.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;;;;;AAGA;;;;;;;;IAWqB,c;;;;;;;;;;6BASb;AAAA,wBAC8C,KAAK,KADnD;AAAA,UACE,MADF,eACE,MADF;AAAA,UACU,SADV,eACU,SADV;AAAA,UACqB,KADrB,eACqB,KADrB;AAAA,UAC4B,GAD5B,eAC4B,GAD5B;AAAA,UACoC,KADpC;;AAGJ,UAAI,SAAS,IAAI,MAAM,CAAC,MAAP,KAAkB,SAAS,CAAC,MAA7C,EAAqD;AACnD,QAAA,OAAO,CAAC,IAAR,CAAa,+EAAb;AACA,QAAA,SAAS,GAAG,SAAS,CAAC,KAAV,CAAgB,CAAhB,EAAmB,MAAM,CAAC,MAA1B,CAAZ;AACD;;AAED,aACE,6BAAC,6BAAD,6BACM,KADN;AAEE,QAAA,MAAM,EAAE,MAAM,CAAC,GAAP,CAAW,qBAAX,CAFV;AAGE,QAAA,SAAS,EAAE,SAHb;AAIE,QAAA,UAAU,EAAE,eAAe,CAAC,KAAD,CAJ7B;AAKE,QAAA,QAAQ,EAAE,eAAe,CAAC,GAAD,CAL3B;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AASD;;;EA1ByC,eAAM,S;;;AACzC,cAAA,CAAA,SAAA,qBACF,sBADE;AAEL,EAAA,MAAM,EAAE,mBAAU,OAAV,CAAkB,sBAAlB,EAAiC,UAFpC;AAGL,EAAA,SAAS,EAAE,mBAAU,OAAV,CAAkB,mBAAU,MAA5B,CAHN;AAIL,EAAA,KAAK,EAAE,mBAAU,SAAV,CAAoB,CAAC,mBAAU,OAAV,CAAkB,mBAAU,MAA5B,CAAD,EAAsC,mBAAU,MAAhD,CAApB,CAJF;AAKL,EAAA,GAAG,EAAE,mBAAU,SAAV,CAAoB,CAAC,mBAAU,OAAV,CAAkB,mBAAU,MAA5B,CAAD,EAAsC,mBAAU,MAAhD,CAApB;AALA;;AA4BT,SAAS,eAAT,CAAyB,KAAzB,EAAwD;AACtD,MAAI,CAAC,KAAL,EAAY;AACV,WAAO,SAAP;AACD;;AAED,MAAI,KAAK,CAAC,OAAN,CAAc,KAAd,KAAwB,KAAK,CAAC,MAAN,KAAiB,CAA7C,EAAgD;AAC9C,IAAA,OAAO,CAAC,IAAR,CAAa,8EAAb;AACA,WAAO,SAAP;AACD;;AAED,SAAO,KAAK,CAAC,OAAN,CAAc,KAAd,IAAuB,KAAvB,GAA+B,CAAC,KAAK,CAAC,CAAP,EAAU,KAAK,CAAC,CAAhB,CAAtC;AACD","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { ColorPropType, View, ViewPropTypes, processColor } from 'react-native';\n\nimport NativeLinearGradient from './NativeLinearGradient';\n\ntype Props = {\n  colors: string[];\n  locations?: number[] | null;\n  start?: Point | null;\n  end?: Point | null;\n} & React.ComponentProps<typeof View>;\n\ntype Point = { x: number; y: number } | [number, number];\n\nexport default class LinearGradient extends React.Component<Props> {\n  static propTypes = {\n    ...ViewPropTypes,\n    colors: PropTypes.arrayOf(ColorPropType).isRequired,\n    locations: PropTypes.arrayOf(PropTypes.number),\n    start: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.object]),\n    end: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.object]),\n  };\n\n  render() {\n    let { colors, locations, start, end, ...props } = this.props;\n\n    if (locations && colors.length !== locations.length) {\n      console.warn('LinearGradient colors and locations props should be arrays of the same length');\n      locations = locations.slice(0, colors.length);\n    }\n\n    return (\n      <NativeLinearGradient\n        {...props}\n        colors={colors.map(processColor)}\n        locations={locations}\n        startPoint={_normalizePoint(start)}\n        endPoint={_normalizePoint(end)}\n      />\n    );\n  }\n}\n\nfunction _normalizePoint(point: Point | null | undefined): [number, number] | undefined {\n  if (!point) {\n    return undefined;\n  }\n\n  if (Array.isArray(point) && point.length !== 2) {\n    console.warn('start and end props for LinearGradient must be of the format [x,y] or {x, y}');\n    return undefined;\n  }\n\n  return Array.isArray(point) ? point : [point.x, point.y];\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}