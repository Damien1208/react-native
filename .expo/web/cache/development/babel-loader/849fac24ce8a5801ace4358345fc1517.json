{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"EventEmitter\", {\n  enumerable: true,\n  get: function get() {\n    return _EventEmitter.EventEmitter;\n  }\n});\nObject.defineProperty(exports, \"NativeModulesProxy\", {\n  enumerable: true,\n  get: function get() {\n    return _NativeModulesProxy.default;\n  }\n});\nObject.defineProperty(exports, \"requireNativeViewManager\", {\n  enumerable: true,\n  get: function get() {\n    return _NativeViewManagerAdapter.requireNativeViewManager;\n  }\n});\nObject.defineProperty(exports, \"SyntheticPlatformEmitter\", {\n  enumerable: true,\n  get: function get() {\n    return _SyntheticPlatformEmitter.default;\n  }\n});\nObject.defineProperty(exports, \"CodedError\", {\n  enumerable: true,\n  get: function get() {\n    return _CodedError.CodedError;\n  }\n});\nObject.defineProperty(exports, \"UnavailabilityError\", {\n  enumerable: true,\n  get: function get() {\n    return _UnavailabilityError.UnavailabilityError;\n  }\n});\nexports.Platform = void 0;\n\nvar _Platform = _interopRequireDefault(require(\"react-native-web/dist/exports/Platform\"));\n\nvar _EventEmitter = require(\"./EventEmitter\");\n\nvar _NativeModulesProxy = _interopRequireDefault(require(\"./NativeModulesProxy\"));\n\nvar _NativeViewManagerAdapter = require(\"./NativeViewManagerAdapter\");\n\nvar _SyntheticPlatformEmitter = _interopRequireDefault(require(\"./SyntheticPlatformEmitter\"));\n\nvar _CodedError = require(\"./errors/CodedError\");\n\nvar _UnavailabilityError = require(\"./errors/UnavailabilityError\");\n\nvar Platform = {\n  OS: _Platform.default.OS\n};\nexports.Platform = Platform;","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AAEO,IAAM,QAAQ,GAAG;AACtB,EAAA,EAAE,EAAE,kBAAoB;AADF,CAAjB","sourcesContent":["import { Platform as ReactNativePlatform } from 'react-native';\n\nimport { EventEmitter, Subscription } from './EventEmitter';\nimport NativeModulesProxy from './NativeModulesProxy';\nimport { requireNativeViewManager } from './NativeViewManagerAdapter';\nimport SyntheticPlatformEmitter from './SyntheticPlatformEmitter';\n\nimport { CodedError } from './errors/CodedError';\nimport { UnavailabilityError } from './errors/UnavailabilityError';\n\nexport const Platform = {\n  OS: ReactNativePlatform.OS,\n};\n\nexport {\n  EventEmitter,\n  NativeModulesProxy,\n  Subscription,\n  SyntheticPlatformEmitter,\n  requireNativeViewManager,\n\n  CodedError,\n  UnavailabilityError,\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}