{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\n\nvar _View = _interopRequireDefault(require(\"react-native-web/dist/exports/View\"));\n\nvar _Text = _interopRequireDefault(require(\"react-native-web/dist/exports/Text\"));\n\nvar _Image = _interopRequireDefault(require(\"react-native-web/dist/exports/Image\"));\n\nvar _FlatList = _interopRequireDefault(require(\"react-native-web/dist/exports/FlatList\"));\n\nvar _ScrollView = _interopRequireDefault(require(\"react-native-web/dist/exports/ScrollView\"));\n\nvar _TouchableWithoutFeedback = _interopRequireDefault(require(\"react-native-web/dist/exports/TouchableWithoutFeedback\"));\n\nvar _ImageBackground = _interopRequireDefault(require(\"react-native-web/dist/exports/ImageBackground\"));\n\nvar _reactNativeElements = require(\"react-native-elements\");\n\nvar _searchResults = _interopRequireDefault(require(\"./searchResults\"));\n\nvar _buttonTvSeries = _interopRequireDefault(require(\"./buttonTvSeries\"));\n\nvar _buttonMovies = _interopRequireDefault(require(\"./buttonMovies\"));\n\nvar _trending = _interopRequireDefault(require(\"./trending\"));\n\nvar _jsxFileName = \"/home/damien/Projects/react-native/components/homeScreen.js\";\n\nvar HomeScreen = function (_Component) {\n  (0, _inherits2.default)(HomeScreen, _Component);\n\n  function HomeScreen() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2.default)(this, HomeScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(HomeScreen)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      moviesList: [],\n      tvSeriesList: [],\n      searchResult: [],\n      search: ''\n    };\n\n    _this.fetchMovieHandler = function () {\n      return fetch(\"https://api.themoviedb.org/3/discover/movie?api_key=\" + \"69e211c516e66ae06b6e2caacfacb19c\").then(function (res) {\n        return res.json();\n      }).then(function (parsedRes) {\n        var moviesArray = [];\n\n        for (var key in parsedRes) {\n          moviesArray.push(parsedRes[key]);\n        }\n\n        _this.setState({\n          moviesList: moviesArray[3]\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.fetchTVHandler = function () {\n      return fetch(\"https://api.themoviedb.org/3/discover/tv?api_key=\" + \"69e211c516e66ae06b6e2caacfacb19c\").then(function (res) {\n        return res.json();\n      }).then(function (parsedRes) {\n        var tvSeriesArray = [];\n\n        for (var key in parsedRes) {\n          tvSeriesArray.push(parsedRes[key]);\n        }\n\n        _this.setState({\n          tvSeriesList: tvSeriesArray[3]\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.fetchMovieSearch = function () {\n      if (_this.state.length < 2) return;\n      return fetch(\"https://api.themoviedb.org/3/search/movie?api_key=\" + \"69e211c516e66ae06b6e2caacfacb19c\" + \"&query=\" + word).then(function (res) {\n        return res.json();\n      }).then(function (parsedRes) {\n        var searchResultArray = [];\n\n        for (var key in parsedRes) {\n          searchResultArray.push(parsedRes[key]);\n        }\n\n        _this.setState({\n          searchResult: searchResultArray[3]\n        });\n      }).then(_this.state.search = '').catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.updateSearch = function (search) {\n      console.log(search);\n\n      _this.setState({\n        search: search\n      });\n\n      _this.fetchMovieSearch();\n    };\n\n    _this.goToDetail = function (item) {\n      return item;\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(HomeScreen, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.fetchMovieHandler();\n      this.fetchTVHandler();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var movieSearch;\n\n      if (this.state.search.length >= 3) {\n        movieSearch = _react.default.createElement(_searchResults.default, {\n          data: this.state.searchResult,\n          actionOnRow: this.goToDetail,\n          title: this.state.search,\n          navigate: this.props.navigation.navigate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          }\n        });\n      }\n\n      return _react.default.createElement(_View.default, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        }\n      }, _react.default.createElement(_Text.default, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        }\n      }, \"Myflix\"), _react.default.createElement(_reactNativeElements.SearchBar, {\n        platform: \"android\",\n        round: true,\n        cancelIcon: true,\n        lightTheme: true,\n        placeholder: \"Search...\",\n        onChangeText: function onChangeText(e) {\n          return _this2.updateSearch(e);\n        },\n        value: this.state.search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        }\n      }), _react.default.createElement(_View.default, {\n        style: styles.menu,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        }\n      }, _react.default.createElement(_buttonMovies.default, {\n        style: styles.button,\n        navigate: this.props.navigation.navigate,\n        data: this.state.moviesList,\n        actionOnRow: this.goToDetail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        }\n      }), _react.default.createElement(_ScrollView.default, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        }\n      }, _react.default.createElement(_View.default, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        }\n      }, _react.default.createElement(_FlatList.default, {\n        style: {\n          flex: 1\n        },\n        horizontal: true,\n        data: this.state.moviesList,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return _react.default.createElement(_View.default, {\n            style: {\n              flex: 1,\n              flexDirection: 'column'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            }\n          }, _react.default.createElement(_Image.default, {\n            source: {\n              uri: \"https://image.tmdb.org/t/p/w200/\" + item.poster_path\n            },\n            style: styles.list,\n            key: item.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126\n            }\n          }), _react.default.createElement(_Text.default, {\n            style: {\n              color: 'white'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130\n            }\n          }, item.title.length > 20 ? item.title.slice(0, 20) + '...' : item.title));\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item.id.toString();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        }\n      }))), _react.default.createElement(_buttonTvSeries.default, {\n        style: styles.button,\n        navigate: this.props.navigation.navigate,\n        data: this.state.tvSeriesList,\n        actionOnRow: this.goToDetail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        }\n      }), _react.default.createElement(_ScrollView.default, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        }\n      }, _react.default.createElement(_View.default, {\n        style: {\n          flex: 1,\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        }\n      }, _react.default.createElement(_FlatList.default, {\n        style: {\n          flex: 1\n        },\n        horizontal: true,\n        data: this.state.tvSeriesList,\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return _react.default.createElement(_View.default, {\n            style: {\n              flex: 1,\n              flexDirection: 'column'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 152\n            }\n          }, _react.default.createElement(_Image.default, {\n            source: {\n              uri: \"https://image.tmdb.org/t/p/w200/\" + item.poster_path\n            },\n            style: styles.list,\n            key: item.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 153\n            }\n          }), _react.default.createElement(_Text.default, {\n            style: {\n              color: 'white'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 157\n            }\n          }, item.name.length > 20 ? item.name.slice(0, 20) + '...' : item.name));\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item.id.toString();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        }\n      }))), _react.default.createElement(_trending.default, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        }\n      })), movieSearch);\n    }\n  }]);\n  return HomeScreen;\n}(_react.Component);\n\nHomeScreen.navigationOptions = {\n  header: null\n};\n\nvar styles = _StyleSheet.default.create({\n  container: {\n    backgroundColor: 'black',\n    color: 'white',\n    flex: 6,\n    flexDirection: 'column',\n    marginBottom: 0,\n    paddingBottom: 3\n  },\n  text: {\n    marginTop: 45,\n    fontSize: 38,\n    color: '#80ffdf',\n    textAlign: 'center',\n    letterSpacing: 4,\n    fontWeight: '500',\n    fontStyle: \"italic\",\n    marginBottom: 15\n  },\n  button: {\n    marginLeft: 6,\n    marginRight: 6,\n    marginTop: 6,\n    color: \"#80ffdf\"\n  },\n  menu: {\n    flex: 5,\n    flexDirection: \"column\"\n  },\n  list: {\n    height: 100,\n    width: 190\n  }\n});\n\nvar _default = HomeScreen;\nexports.default = _default;","map":{"version":3,"sources":["/home/damien/Projects/react-native/components/homeScreen.js"],"names":["HomeScreen","state","moviesList","tvSeriesList","searchResult","search","fetchMovieHandler","fetch","then","res","json","parsedRes","moviesArray","key","push","setState","catch","err","console","log","fetchTVHandler","tvSeriesArray","fetchMovieSearch","length","word","searchResultArray","updateSearch","goToDetail","item","movieSearch","props","navigation","navigate","styles","container","text","e","menu","button","flex","flexDirection","uri","poster_path","list","id","color","title","slice","toString","name","Component","navigationOptions","header","StyleSheet","create","backgroundColor","marginBottom","paddingBottom","marginTop","fontSize","textAlign","letterSpacing","fontWeight","fontStyle","marginLeft","marginRight","height","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { StyleSheet, View, Text, Image, FlatList, ScrollView, TouchableWithoutFeedback, ImageBackground } from 'react-native';\nimport { SearchBar } from 'react-native-elements';\nimport SearchResults from './searchResults';\nimport TvSeriesButton from './buttonTvSeries';\nimport MoviesButton from './buttonMovies';\nimport { API_KEY } from 'react-native-dotenv';\nimport Trending from './trending';\n\n\n\nclass HomeScreen extends Component {\n    static navigationOptions = {\n        header: null\n    };\n\n    state = {\n        moviesList: [],\n        tvSeriesList: [],\n        searchResult: [],\n        search: ''\n    };\n\n    componentWillMount() {\n        this.fetchMovieHandler()\n        this.fetchTVHandler()\n    }\n\n    fetchMovieHandler = () => {\n        return fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}`)\n            .then((res) => res.json())\n            .then((parsedRes) => {\n                const moviesArray = [];\n                for (const key in parsedRes) {\n                    moviesArray.push(parsedRes[key]);\n                }\n                this.setState({\n                    moviesList: moviesArray[3]\n                });\n            })\n            .catch(err => console.log(err));\n    }\n\n    fetchTVHandler = () => {\n        return fetch(`https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}`)\n            .then((res) => res.json())\n            .then((parsedRes) => {\n                const tvSeriesArray = [];\n                for (const key in parsedRes) {\n                    tvSeriesArray.push(parsedRes[key]);\n                }\n                this.setState({\n                    tvSeriesList: tvSeriesArray[3],\n                });\n            })\n            .catch(err => console.log(err));\n    }\n\n    fetchMovieSearch = () => {\n        if (this.state.length < 2) return;\n        return fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${word}`)\n            .then((res) => res.json())\n            .then((parsedRes) => {\n                const searchResultArray = [];\n                for (const key in parsedRes) {\n                    searchResultArray.push(parsedRes[key]);\n                }\n                this.setState({\n                    searchResult: searchResultArray[3]\n                })\n            })\n            .then(this.state.search = '')\n            .catch(err => console.log(err));\n    }\n\n    updateSearch = search => {\n        console.log(search)\n        this.setState({ search });\n        this.fetchMovieSearch()\n    };\n\n    goToDetail = (item) => {\n        return item\n    }\n\n    render() {\n        let movieSearch;\n        if(this.state.search.length >= 3) {\n           movieSearch = <SearchResults \n           data={this.state.searchResult} \n           actionOnRow={this.goToDetail}\n           title={this.state.search}\n           navigate={this.props.navigation.navigate}\n           />\n        }\n\n        return (\n\n            <View style={styles.container}>\n                <Text style={styles.text}>Myflix</Text>\n                    <SearchBar\n                        platform=\"android\"\n                        round\n                        cancelIcon\n                        lightTheme\n                        placeholder=\"Search...\"\n                        onChangeText={(e) => this.updateSearch(e)}\n                        value={this.state.search}\n                    />\n                    <View style={styles.menu}>\n                        <MoviesButton \n                            style={styles.button}\n                            navigate={this.props.navigation.navigate}  \n                            data={this.state.moviesList} \n                            actionOnRow={this.goToDetail}\n                        />\n                       \n                       <ScrollView>\n                            <View>\n                                <FlatList\n                                style={{flex: 1}}\n                                horizontal={true}\n                                data={this.state.moviesList}\n                                renderItem={({ item }) => (\n                                    <View style={{flex: 1, flexDirection: 'column'}}>\n                                        <Image source={\n                                            { uri: `https://image.tmdb.org/t/p/w200/${item.poster_path}` }\n                                            }\n                                            style={styles.list} key={item.id}></Image>\n                                        <Text style={{color: 'white'}}>{item.title.length > 20 ? item.title.slice(0, 20)+'...' : item.title}</Text>\n                                    </View>\n                                )}\n                                keyExtractor={item => item.id.toString()}\n                                ></FlatList>\n                            </View>\n                        </ScrollView>\n\n                        <TvSeriesButton\n                            style={styles.button}\n                            navigate={this.props.navigation.navigate}  \n                            data={this.state.tvSeriesList} \n                            actionOnRow={this.goToDetail}   \n                        />\n                        \n                        <ScrollView>\n                            <View style={{flex: 1, flexDirection: 'row'}}>\n                                <FlatList\n                                style={{flex: 1}}\n                                horizontal={true}\n                                data={this.state.tvSeriesList}\n                                renderItem={({ item }) => (\n                                    <View style={{flex: 1, flexDirection: 'column'}}>\n                                        <Image source={\n                                            { uri: `https://image.tmdb.org/t/p/w200/${item.poster_path}` }\n                                            }\n                                            style={styles.list} key={item.id}></Image>\n                                        <Text style={{color: 'white'}}>{item.name.length > 20 ? item.name.slice(0, 20) + '...' : item.name}</Text>\n                                    </View>\n                                )}\n                                keyExtractor={item => item.id.toString()}\n                                ></FlatList>\n                            </View>\n                        </ScrollView>\n                        <Trending />\n                    </View>\n                    {movieSearch}\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: 'black',\n        color: 'white',\n        flex: 6,\n        flexDirection: 'column',\n        marginBottom: 0,\n        paddingBottom: 3\n    },\n    text: {\n        marginTop: 45,\n        fontSize: 38,\n        color: '#80ffdf',\n        textAlign: 'center',\n        letterSpacing: 4,\n        fontWeight: '500',\n        fontStyle: \"italic\",\n        marginBottom: 15\n    },\n    button: {\n        marginLeft: 6,\n        marginRight: 6,\n        marginTop: 6,\n        color: \"#80ffdf\"\n    },\n    menu: {\n        flex: 5,\n        flexDirection: \"column\"\n    },\n    list: {\n        height: 100,\n        width: 190,\n    }\n});\n\nexport default HomeScreen;\n"]},"metadata":{},"sourceType":"script"}