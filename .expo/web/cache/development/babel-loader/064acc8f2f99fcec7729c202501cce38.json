{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getEmbeddedAssetUri = getEmbeddedAssetUri;\n\nvar _expoConstants = _interopRequireDefault(require(\"expo-constants\"));\n\nvar FileSystem = _interopRequireWildcard(require(\"expo-file-system\"));\n\nvar bundledAssets = new Set(FileSystem.bundledAssets || []);\n\nfunction getEmbeddedAssetUri(hash, type) {\n  var assetName = \"asset_\" + hash + (type ? \".\" + type : '');\n\n  if (__DEV__ || _expoConstants.default.appOwnership !== 'standalone' || !bundledAssets.has(assetName)) {\n    return null;\n  }\n\n  return \"\" + FileSystem.bundleDirectory + assetName;\n}","map":{"version":3,"sources":["../src/EmbeddedAssets.ts"],"names":[],"mappings":";;;;;;;;;AAAA;;AACA;;AAGA,IAAM,aAAa,GAAG,IAAI,GAAJ,CAAQ,UAAU,CAAC,aAAX,IAA4B,EAApC,CAAtB;;AAMM,SAAU,mBAAV,CAA8B,IAA9B,EAA4C,IAA5C,EAA+D;AACnE,MAAM,SAAS,cAAY,IAAZ,IAAmB,IAAI,SAAO,IAAP,GAAgB,EAAvC,CAAf;;AACA,MAAI,OAAO,IAAI,uBAAU,YAAV,KAA2B,YAAtC,IAAsD,CAAC,aAAa,CAAC,GAAd,CAAkB,SAAlB,CAA3D,EAAyF;AACvF,WAAO,IAAP;AACD;;AACD,cAAU,UAAU,CAAC,eAArB,GAAuC,SAAvC;AACD","sourcesContent":["import Constants from 'expo-constants';\nimport * as FileSystem from 'expo-file-system';\n\n// Fast lookup check if assets are available in the local bundle\nconst bundledAssets = new Set(FileSystem.bundledAssets || []);\n\n/**\n * Returns the local URI of an embedded asset from its hash and type, or null if the asset is not\n * included in the app bundle.\n */\nexport function getEmbeddedAssetUri(hash: string, type: string | null): string | null {\n  const assetName = `asset_${hash}${type ? `.${type}` : ''}`;\n  if (__DEV__ || Constants.appOwnership !== 'standalone' || !bundledAssets.has(assetName)) {\n    return null;\n  }\n  return `${FileSystem.bundleDirectory}${assetName}`;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}