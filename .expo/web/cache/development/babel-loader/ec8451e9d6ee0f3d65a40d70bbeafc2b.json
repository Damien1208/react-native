{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _core = require(\"@react-navigation/core\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _Platform = _interopRequireDefault(require(\"react-native-web/dist/exports/Platform\"));\n\nvar _StackView = _interopRequireDefault(require(\"../views/StackView/StackView\"));\n\nfunction createStackNavigator(routeConfigMap) {\n  var stackConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var router = (0, _core.StackRouter)(routeConfigMap, stackConfig);\n  var Navigator = (0, _core.createNavigator)(_StackView.default, router, stackConfig);\n\n  if (!stackConfig.disableKeyboardHandling && _Platform.default.OS !== 'web') {\n    Navigator = (0, _native.createKeyboardAwareNavigator)(Navigator, stackConfig);\n  }\n\n  return Navigator;\n}\n\nvar _default = createStackNavigator;\nexports.default = _default;","map":{"version":3,"sources":["createStackNavigator.tsx"],"names":["stackConfig","router","StackRouter","Navigator","createNavigator","Platform","createKeyboardAwareNavigator"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA;;AAOA,SAAA,oBAAA,CAAA,cAAA,EAkBE;AARAA,MAAAA,WAQA,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GADI,EAPJA;AASA,MAAMC,MAAM,GAAGC,uBAAW,cAAXA,EAAf,WAAeA,CAAf;AAGA,MAAIC,SAAS,GAAGC,2BAAe,kBAAfA,EAAe,MAAfA,EAAhB,WAAgBA,CAAhB;;AACA,MAAI,CAACJ,WAAW,CAAZ,uBAAA,IAAwCK,kBAAAA,EAAAA,KAA5C,KAAA,EAAmE;AACjEF,IAAAA,SAAS,GAAGG,0CAA4B,SAA5BA,EAAZH,WAAYG,CAAZH;AAGF;;AAAA,SAAA,SAAA;AAGF;;eAAA,oB","sourcesContent":["import { StackRouter, createNavigator } from '@react-navigation/core';\nimport { createKeyboardAwareNavigator } from '@react-navigation/native';\nimport { Platform } from 'react-native';\nimport StackView from '../views/StackView/StackView';\nimport {\n  NavigationStackScreenOptions,\n  NavigationStackConfig,\n  Screen,\n} from '../types';\n\nfunction createStackNavigator(\n  routeConfigMap: {\n    [key: string]:\n      | Screen\n      | ({ screen: Screen } | { getScreen(): Screen }) & {\n          path?: string;\n          navigationOptions?: NavigationStackScreenOptions;\n          params?: { [key: string]: any };\n        };\n  },\n  stackConfig: NavigationStackConfig & {\n    initialRouteName?: string;\n    initialRouteParams?: { [key: string]: any };\n    paths?: { [routeName: string]: string };\n    defaultNavigationOptions?: NavigationStackScreenOptions;\n    navigationOptions?: NavigationStackScreenOptions;\n    initialRouteKey?: string;\n  } = {}\n) {\n  const router = StackRouter(routeConfigMap, stackConfig);\n\n  // Create a navigator with StackView as the view\n  let Navigator = createNavigator(StackView, router, stackConfig);\n  if (!stackConfig.disableKeyboardHandling && Platform.OS !== 'web') {\n    Navigator = createKeyboardAwareNavigator(Navigator, stackConfig);\n  }\n\n  return Navigator;\n}\n\nexport default createStackNavigator;\n"]},"metadata":{},"sourceType":"script"}